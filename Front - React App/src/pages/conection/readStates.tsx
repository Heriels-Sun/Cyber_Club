import { ProgramMetadata } from "@gear-js/api";
import { Button } from "@gear-js/ui";
import { useState } from "react";
import { useApi, useAlert } from "@gear-js/react-hooks";
import { AnyJson } from "@polkadot/types/types";

function ReadStates() {
  const { api } = useApi();

  const alert = useAlert();

  const [fullState, setFullState] = useState<any | undefined>(0);

  // Add your programID
  const programIDFT =
    "0x1d52fdfabb3977949d74ee30ac84ae5d41ae0d776f61d57c075a23590314bef2";

  // Add your metadata.txt
  const meta =
    "00020000000100000000010c0000000000000000010d0000001d11540008306379626572636c75625f696f3843796265724d657373616765496e000114284164644e657755736572040004011c4163746f724964000000384d6f64696679557365726e616d65080004011c4163746f7249640000100118537472696e670001003c4d6f64696679557365724c6576656c080004011c4163746f7249640000100118537472696e67000200404d6f6469667955736572506f696e7473080004011c4163746f724964000014010c753634000300284164644e657747616d650800100118537472696e67000018012c43796265724c6576656c73000400000410106773746418636f6d6d6f6e287072696d6974697665731c4163746f724964000004000801205b75383b2033325d000008000003200000000c000c00000503001000000502001400000506001808306379626572636c75625f696f2c43796265724c6576656c7300000801106e616d65100118537472696e6700011c6d6f64756c65731c01445665633c43796265724d6f64756c65733e00001c00000220002008306379626572636c75625f696f3043796265724d6f64756c657300000c01106e616d65100118537472696e670001146c6576656c0c010875380001247175657374696f6e732401485665633c43796265725175657374696f6e3e00002400000228002808306379626572636c75625f696f3443796265725175657374696f6e00000c01207175657374696f6e100118537472696e6700011c6f7074696f6e732c012c5665633c537472696e673e000138636f72726563745f616e737765720c0108753800002c00000210003008306379626572636c75625f696f3c43796265724d6573736167654f75740001142c557365724372656174656400000040557365726e616d654d6f64696669656400010044557365724c6576656c4d6f6469666965640002004855736572506f696e74734d6f6469666965640003002c47616d6543726561746564000400003408306379626572636c75625f696f284379626572537461746500000c011c706c61796572733801405665633c4379626572506c617965723e00011467616d657340013c5665633c437962657247616d65733e00012073706f6e736f72734c01485665633c437962657253706f6e736f72733e0000380000023c003c08306379626572636c75625f696f2c4379626572506c617965720000100108696404011c4163746f7249640001106e616d65100118537472696e67000118706f696e747314010c75363400013463757272656e745f6c6576656c100118537472696e6700004000000244004408306379626572636c75625f696f28437962657247616d657300000801106e616d65100118537472696e670001186c6576656c734801405665633c43796265724c6576656c733e00004800000218004c00000250005008306379626572636c75625f696f34437962657253706f6e736f7273000008010869640c010875380001106e616d65100118537472696e670000";

  const metadata = ProgramMetadata.from(meta);

  const getState = () => {
    api.programState
      .read({ programId: programIDFT,
        payload:"" }, 
        metadata)
      .then((result) => {
        setFullState(result.toJSON());
        alert.success("Successful state");
      })
      .catch(({ message }: Error) => alert.error(message));
  };

  getState();

  console.log(fullState)

  return (
    <div>-</div>
  );
}

export { ReadStates };
